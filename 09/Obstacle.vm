function Obstacle.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push constant 495
pop this 1
push constant 168
pop this 2
push this 1
push constant 16
add
pop this 3
push this 2
push constant 16
add
pop this 4
push this 1
push this 2
push this 3
push this 4
call Hitbox.new 4
pop this 0
push pointer 0
call Obstacle.draw 1
pop temp 0
push pointer 0
return
function Obstacle.getHitbox 0
push argument 0
pop pointer 0
push this 0
return
function Obstacle.moveLeft 0
push argument 0
pop pointer 0
push pointer 0
call Obstacle.erase 1
pop temp 0
push this 1
push argument 1
sub
pop this 1
push this 3
push argument 1
sub
pop this 3
push this 0
push this 1
push this 2
push this 3
push this 4
call Hitbox.translate 5
pop temp 0
push this 3
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Obstacle.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Obstacle.draw 2
push argument 0
pop pointer 0
push this 1
push this 2
call Utils.getScreenLocation 2
pop local 0
push constant 16384
push local 0
add
pop local 1
push local 1
push constant 0
add
push constant 384
call Memory.poke 2
pop temp 0
push local 1
push constant 32
add
push constant 960
call Memory.poke 2
pop temp 0
push local 1
push constant 64
add
push constant 960
call Memory.poke 2
pop temp 0
push local 1
push constant 96
add
push constant 964
call Memory.poke 2
pop temp 0
push local 1
push constant 128
add
push constant 9158
call Memory.poke 2
pop temp 0
push local 1
push constant 160
add
push constant 13254
call Memory.poke 2
pop temp 0
push local 1
push constant 192
add
push constant 13262
call Memory.poke 2
pop temp 0
push local 1
push constant 224
add
push constant 13308
call Memory.poke 2
pop temp 0
push local 1
push constant 256
add
push constant 13304
call Memory.poke 2
pop temp 0
push local 1
push constant 288
add
push constant 16320
call Memory.poke 2
pop temp 0
push local 1
push constant 320
add
push constant 8128
call Memory.poke 2
pop temp 0
push local 1
push constant 352
add
push constant 960
call Memory.poke 2
pop temp 0
push local 1
push constant 384
add
push constant 960
call Memory.poke 2
pop temp 0
push local 1
push constant 416
add
push constant 960
call Memory.poke 2
pop temp 0
push local 1
push constant 448
add
push constant 960
call Memory.poke 2
pop temp 0
push local 1
push constant 480
add
push constant 960
call Memory.poke 2
pop temp 0
push constant 0
return
function Obstacle.readyToClear 1
push argument 0
pop pointer 0
push this 1
push constant 10
eq
push this 1
push constant 10
lt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function Obstacle.erase 0
push argument 0
pop pointer 0
push this 0
push constant 0
call Hitbox.paint 2
pop temp 0
push constant 0
return
function Obstacle.dispose 0
push argument 0
pop pointer 0
push this 0
call Hitbox.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
